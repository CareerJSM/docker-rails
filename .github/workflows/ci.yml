name: CI & CD

on:
  pull_request:
  push:
    branches:
      - master

env:
  DOCKER_BUILDKIT: 1

jobs:
  vulnerability-scanning:
    name: Vulnerability Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        architecture: [alpine, debian]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get Image Name
        run: echo "IMAGE_NAME=$(echo '${{ github.repository }}' | awk '{print tolower($0)}')/${{ matrix.architecture }}" >> $GITHUB_ENV
      - name: Build & Test
        id: build-docker-image-using-cache
        uses: whoan/docker-build-with-cache-action@v5.11.0
        timeout-minutes: 5
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          image_name: ${{ env.IMAGE_NAME }}
          image_tag: ${{ github.sha }}
          push_git_tag: true
          dockerfile: Dockerfile.${{ matrix.architecture }}
          build_extra_args: --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Scan Image for Vulnerabilities
        uses: docker://docker.io/aquasec/trivy:0.2.1
        timeout-minutes: 5
        with:
          args: --cache-dir /var/lib/trivy --no-progress ${{ steps.build-docker-image-using-cache.outputs.FULL_IMAGE_NAME }}:${{ github.sha }}
      - name: Scan Image for Vulnerabilities
        uses: docker://docker.io/aquasec/trivy:0.2.1
        timeout-minutes: 5
        with:
          args: --cache-dir /var/lib/trivy --severity "CRITICAL" --exit-code 1 --no-progress ${{ steps.build-docker-image-using-cache.outputs.FULL_IMAGE_NAME }}:${{ github.sha }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    timeout-minutes: 10
    strategy:
      matrix:
        architecture: [alpine, debian]
    steps:
      - name: Build and publish Docker Image to GitHub Packages Registry
        uses: VaultVulp/gp-docker-action@1.1.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: rails
          image-tag: latest-${{ matrix.architecture }}
          dockerfile: Dockerfile.${{ matrix.architecture }}
          custom-args: --build-arg BUILDKIT_INLINE_CACHE=1

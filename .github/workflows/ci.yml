name: CI & CD

on:
  pull_request:
  push:
    branches:
      - master

env:
  DOCKER_BUILDKIT: 1

jobs:
  vulnerability-scanning:
    name: Vulnerability Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      full_image_name_alpine: ${{ steps.output-full-image-name.outputs.FULL_IMAGE_NAME_alpine }}
      full_image_name_debian: ${{ steps.output-full-image-name.outputs.FULL_IMAGE_NAME_debian }}
    strategy:
      matrix:
        architecture: [alpine, debian]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get Image Name
        run: echo "IMAGE_NAME=$(echo '${{ github.repository }}' | awk '{print tolower($0)}')/${{ matrix.architecture }}" >> $GITHUB_ENV
      - name: Build & Test
        id: build-docker-image-using-cache
        uses: whoan/docker-build-with-cache-action@v5.11.0
        timeout-minutes: 5
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          image_name: ${{ env.IMAGE_NAME }}
          image_tag: ${{ github.sha }}
          push_git_tag: true
          dockerfile: Dockerfile.${{ matrix.architecture }}
          build_extra_args: --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Output the Full Image Name
        id: output-full-image-name
        run: echo '::set-output name=FULL_IMAGE_NAME_${{ matrix.architecture }}::${{ steps.build-docker-image-using-cache.outputs.FULL_IMAGE_NAME }}'
      - name: Aqua Security Trivy
        uses: aquasecurity/trivy-action@0.0.17
        with:
          image-ref: ${{ steps.build-docker-image-using-cache.outputs.FULL_IMAGE_NAME }}:${{ github.sha }}
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: "trivy-results.sarif"
      - name: Aqua Security Trivy
        uses: aquasecurity/trivy-action@0.0.17
        with:
          image-ref: ${{ steps.build-docker-image-using-cache.outputs.FULL_IMAGE_NAME }}:${{ github.sha }}
          exit-code: "1"
          severity: "CRITICAL"
          format: "table"

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - vulnerability-scanning
    timeout-minutes: 10
    strategy:
      matrix:
        architecture: [alpine, debian]
    env:
      CACHE_IMAGE_NAME_alpine: ${{ needs.build-test-packages.outputs.full_image_name_alpine }}
      CACHE_IMAGE_NAME_debian: ${{ needs.build-test-packages.outputs.full_image_name_debian }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get Image Name
        run: echo "CACHE_IMAGE_NAME=${CACHE_IMAGE_NAME_${{ matrix.architecture }}}" >> $GITHUB_ENV
      - name: Build and publish Docker Image to GitHub Packages Registry
        uses: VaultVulp/gp-docker-action@1.1.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: rails
          image-tag: latest-${{ matrix.architecture }}
          dockerfile: Dockerfile.${{ matrix.architecture }}
          custom-args: --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from=${{ env.CACHE_IMAGE_NAME }}:${{ github.sha }}
